#!/bin/sh
# apt update -y && apt upgrade -y && apt dist-upgrade -y
# apt autoremove -y && apt autoclean -y && apt clean -y
# sudo apt-get install network-manager
# apt -y install fail2ban software-properties-common
# apt install -y build-essential libevent-dev libssl-dev
# apt install -y build-essential wget tar
# apt install zip
# apt-get install ifupdown
# touch pro.sh
# chmod a+x pro.sh 
# more pro.sh 

random() {
	tr </dev/urandom -dc A-Za-z0-9 | head -c5
	echo
}

array=(1 2 3 4 5 6 7 8 9 0 a b c d e f)
main_interface=$(ip link | awk 'NR==5{print substr($2,1,4)}')
gen32() {
	ip64() {
		echo "${array[$RANDOM % 16]}${array[$RANDOM % 16]}}"
	}
	echo "$1:$(ip64):$(ip64)"
}

# install_3proxy() {
#     echo "installing 3proxy"
#    if [ ! -f "/root/0.9.3.tar.gz" ];then
# 	echo "3proxy  soft isnt exist!"
#     wget https://github.com/z3APA3A/3proxy/archive/0.9.3.tar.gz
# 	fi
#     tar -xvf 0.9.3.tar.gz 
# 	cd 3proxy-0.9.3
#     chmod +x /root/install.sh
# 	make -f Makefile.Linux
# 	make -f Makefile.Linux  install 
# 	mkdir /usr/local/etc/3proxy
# 	mkdir /usr/local/etc/3proxy/bin
# 	mkdir /usr/local/etc/3proxy/logs
# 	mkdir /usr/local/etc/3proxy/stat
# 	cp src/3proxy.rc /usr/local/etc/3proxy/bin
#     cp scripts/3proxy.service  /usr/lib/systemd/3proxy.service
#     chmod +x /usr/lib/systemd/3proxy.service
# 	touch /usr/local/etc/3proxy/3proxy.cfg
#     chmod 755 /usr/local/etc/3proxy               
# 	cd /usr/local/etc/3proxy
#     chmod +x /etc/init.d/3proxy
#     cd $WORKDIR
# }

gen_3proxy() {
    cat <<EOF
    daemon
    maxconn 20000
    nserver 1.1.1.1
    nserver 8.8.4.4
    nserver 2001:4860:4860::8888
    nserver 2001:4860:4860::8844
    nserver 127.0.0.53
    nscache 65536
    timeouts 1 5 30 60 180 1800 15 60
    setgid 65535
    setuid 65535
    stacksize 6291456
    flush
    auth none
    users $(awk -F "/" 'BEGIN{ORS="";} {print $1 ":CL:" $2 " "}' ${WORKDATA})
    $(awk -F "/" '{print "auth none\n" \
    "allow " $1 "\n" \
    "proxy -6 -n -a -p" $4 " -i" $3 " -e"$5"\n" \
    "flush\n"}' ${WORKDATA})
EOF
}

gen_netplan() {
    cat <<EOF
    [keyfile]
    # devices managed by networkd
    unmanaged-devices+=interface-name:ens3,mac:bc:24:11:1b:c0:be,except:type:ethernet
EOF
}

#gen_proxy_file_for_user() {
#    pwd
#	WORKDIR="/home/proxy-installer"
#    WORKDATA="${WORKDIR}/data.txt"
#    cd $WORKDIR
#    cat >proxy.txt <<EOF
#    $(awk -F "/" '{print $3 ":" $4 ":" $1 ":" $2 }' ${WORKDATA})
#EOF
#}    

# upload_proxy() {
#     local PASS=$(random)
#     zip --password $PASS proxy.zip proxy.txt
#     URL=$(curl --upload-file ./proxy.zip https://transfer.sh/proxy.zip)
#     echo "Proxy is ready! Format IP:PORT:LOGIN:PASS"
#     echo "Download zip archive from: ${URL}"
#     echo "Password: ${PASS}"

# }
    
gen_data() {
    seq $FIRST_PORT $LAST_PORT | while read port; do
        echo "$(random)/$(random)/$IP4/$port/$(gen32 $IP6)"
    done
}

gen_iptables() {
    cat <<EOF
    $(awk -F "/" '{print "iptables -I INPUT -p tcp --dport " $4 "  -m state --state NEW -j ACCEPT"}' ${WORKDATA})
EOF
}

gen_ifconfig() {
    cat <<EOF
$(awk -F "/" '{print "ifconfig '$main_interface' inet6 add " $5 "/64"}' ${WORKDATA})
EOF
}

echo "installing apps"
apt install -y gcc net-tools wget tar >/dev/null

# install_3proxy

echo "working folder = /home/proxy-installer"
WORKDIR="/home/proxy-installer"
WORKDATA="${WORKDIR}/data.txt"
cd $WORKDIR 

IP4=$(curl -6 -s icanhazip.com)
IP6=$(curl -6 -s icanhazip.com | cut -f1-6 -d':')

echo "Internal ip = ${IP4}. Exteranl sub for ip6 = ${IP6}"

echo "How many proxy do you want to create? Example 500"  
read COUNT

FIRST_PORT=20000
LAST_PORT=$(($FIRST_PORT + $COUNT))

gen_data >$WORKDIR/data.txt

gen_iptables >$WORKDIR/boot_iptables.sh
gen_ifconfig >$WORKDIR/boot_ifconfig.sh
touch /etc/rc.local
chmod +x $WORKDIR/boot_*.sh /etc/rc.local

gen_3proxy >/usr/local/etc/3proxy/3proxy.cfg
\cp  /usr/local/etc/3proxy/3proxy.cfg   /etc/3proxy/3proxy.cfg
mkdir /run/NetworkManager/conf.d
touch /run/NetworkManager/conf.d/netplan.conf
chmod +x /run/NetworkManager/conf.d/netplan.conf
gen_netplan >/run/NetworkManager/conf.d/netplan.conf

cat >>/etc/rc.local <<EOF
sudo service network-manager restart
ifconfig ${main_interface} up
bash ${WORKDIR}/boot_iptables.sh
bash ${WORKDIR}/boot_ifconfig.sh
ulimit -n 65535
#/usr/local/etc/3proxy/bin/3proxy.rc /usr/local/etc/3proxy/3proxy.cfg &
systemctl start 3proxy  
EOF

bash /etc/rc.local

#gen_proxy_file_for_user 

systemctl restart 3proxy

#netstat -tulpn | grep LISTEN
# upload_proxy 
